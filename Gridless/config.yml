# Configuration for dataset

dataset:
  seed: 42
  dataset_path: '../dataset_folder/recv_sig_noise_01.npy'
  sigdata_path: '../dataset_folder/sig_amp_and_noise_std_01.mat'
  label_path: '../dataset_folder/traindata_01.csv'
  test_size: 0.1
  val_size: 0.1
  n_snap: 30
  max_val: [80, 5]
  max_angle: 90
  last_dim: True
  batch_size: 512
  num_workers: 10

model:
  # Activation function for network.
  act_fn1: 'relu' # relu, tanh, gelu, swish
  act_fn2: 'sigmoid'
  act_fn3: 'tanh'

  c_in: 1
  c_outsum: [16, 32, 48, 64]
  c_out: [{'1x1': 6, '1x3': 6, '3x1': 6, '3x3': 8, '5x1': 6},
         {'1x1': 8, '1x3': 8, '3x1': 8, '3x3': 16, '5x1': 8},
            {'1x1': 10, '1x3': 10, '3x1': 10, '3x3': 24, '5x1': 10}]
  c_red: [{'1x3': 12, '3x1': 12, '3x3': 16, '5x1': 12},
                    {'1x3': 16, '3x1': 16, '3x3': 32, '5x1': 16},
                        {'1x3': 20, '3x1': 20, '3x3': 48, '5x1': 20}]
  k_size: {'1x1': [1, 1], '1x3': [1, 3], '2x1': [2, 1], '3x1': [3, 1], '3x3': [3, 3], '3x5': [3, 5],'5x1': [5, 1]}
  

  # Convolutional hyperparameters.
  conv_stride: [1, 1]
  conv_padding: {'1x1': [0, 0], '1x3': [0, 1], '2x1': [0, 0], '3x1': [1, 0], '3x3': [1, 1], '5x1': [2, 0]}
  conv_dilation: [1, 1]

  # Downsampling hyperparameters.
  pool_stride: [1, 1]
  pool_padding: [1, 0]
  pool_dilation: [2, 1]

  # Others.
  use_bias: True 
  use_bn: True
  is_1dkernel: True
  is_2dkernel: True
  n_layers: 2
  n_inception: 2
  resnet_stride1: [1, 1]
  resnet_stride2: [2, 1]
  resnet_subsample: True
  is_concat: True
  is_skip: True
  is_ampskip: True
  is_doaskip: False
  is_se_net: True
  squeeze_ratio: 8
  rnn_hidden_size: 64
  rnn_nlayers: 3
  n_snap: 30
  ndoa_param: 2

training:
  # config: 1
  checkpoint_path: './saved_models/exp2_largedata_largeparam'
  max_epochs: 50
  optimizer_type: 'adamw' # adam, sgd, adamw, 
  learning_rate: 0.001
  loss_type: 'loss4' # try  2, 3, 3_1, 4, 4_1 and 5 also.
  weight_decay: 0
  is_norm: False
  loss_weights: [1, 1, 1]

metrics:
  rmse_threshold: 2.4


# exp1.
# parameters: 287218
# c_outsum: [8, 24, 36, 48]
# c_out: [{'1x1': 4, '1x3': 4, '3x1': 4, '3x3': 8, '5x1': 4},
#       {'1x1': 6, '1x3': 6, '3x1': 6, '3x3': 12, '5x1': 6},
#         {'1x1': 8, '1x3': 8, '3x1': 8, '3x3': 16, '5x1': 8}]
# c_red: [{'1x3': 8, '3x1': 8, '3x3': 16, '5x1': 8},
#       {'1x3': 12, '3x1': 12, '3x3': 24, '5x1': 12},
#         {'1x3': 16, '3x1': 16, '3x3': 32, '5x1': 16}]

# exp2
# parameters: 
# c_outsum: [16, 32, 48, 64]
# c_out: [{'1x1': 6, '1x3': 6, '3x1': 6, '3x3': 8, '5x1': 6},
#          {'1x1': 8, '1x3': 8, '3x1': 8, '3x3': 16, '5x1': 8},
#             {'1x1': 10, '1x3': 10, '3x1': 10, '3x3': 24, '5x1': 10}]
# c_red: [{'1x3': 12, '3x1': 12, '3x3': 16, '5x1': 12},
#                     {'1x3': 16, '3x1': 16, '3x3': 32, '5x1': 16},
#                         {'1x3': 20, '3x1': 20, '3x3': 48, '5x1': 20}]
